// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/fail": {
            "get": {
                "description": "Fail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Response"
                ],
                "summary": "Fail",
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseFail"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Health",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Response"
                ],
                "summary": "Health",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyObject"
                        }
                    }
                }
            }
        },
        "/interface": {
            "get": {
                "description": "Interface",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Response"
                ],
                "summary": "Interface",
                "responses": {
                    "200": {
                        "description": "Return product response",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseJsonSuccess"
                        }
                    },
                    "400": {
                        "description": "Return error message",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.ResponseFail"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data_fail": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/success": {
            "get": {
                "description": "Success",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Response"
                ],
                "summary": "Success",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseJsonSuccess"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "response.EmptyObject": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "response.ResponseFail": {
            "type": "object",
            "properties": {
                "data": {},
                "data_fail": {},
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "default": "fail"
                }
            }
        },
        "response.ResponseJsonSuccess": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3000",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Swagger Example API",
	Description:      "This is a sample server Petstore server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
